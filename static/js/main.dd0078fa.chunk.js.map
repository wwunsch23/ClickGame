{"version":3,"sources":["components/Header/index.js","components/GameBoard/index.js","components/GameCard/index.js","components/Footer/index.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","guessStyle","message","currentScore","topScore","GameBoard","children","GameCard","id","onClick","handlePieceClick","alt","name","src","image","Footer","App","state","gamePieces","buildings","clickedItems","addClickedItem","_this","setState","concat","includes","_this2","this","components_Header","components_GameBoard","sort","Math","random","map","piece","i","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"g3DAeeA,MAZf,SAAgBC,GACd,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sEAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,eACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,EAAMK,YAAaL,EAAMM,SACxCL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,kBACkBJ,EAAMO,aADxB,IACsCN,EAAAC,EAAAC,cAAA,WADtC,eACyDH,EAAMQ,YCGtDC,MAVf,SAAmBT,GACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACZJ,EAAMU,kBCHA,SAASC,EAASX,GAC/B,OACEC,EAAAC,EAAAC,cAAA,OACEC,UAAU,cACVQ,GAAIZ,EAAMY,GACVC,QAAS,kBAAMb,EAAMc,iBAAiBd,EAAMY,MAE5CX,EAAAC,EAAAC,cAAA,OAAKY,IAAKf,EAAMgB,KAAMC,IAAKjB,EAAMkB,MAAON,GAAIZ,EAAMY,YCPzC,SAASO,IACtB,OAAOlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BCkFTgB,6MA7EbC,MAAQ,CACNd,aAAc,EACdC,SAAU,EACVF,QAAS,0BACTgB,WAAYC,EACZC,aAAc,GACdnB,WAAY,gBAGdoB,eAAiB,SAAAb,GACfc,EAAKC,SAAS,SAAAN,GAGZ,MAAO,CACLG,aAHmBH,EAAMG,aAAaI,OAAOhB,SAQnDE,iBAAmB,SAAAF,GAEbc,EAAKL,MAAMG,aAAaK,SAASjB,GAGnCc,EAAKC,SAAS,CACZpB,aAAc,EACdD,QAAS,0BACTkB,aAAc,GACdnB,WAAY,eAIdqB,EAAKD,eAAeb,GAEpBc,EAAKC,SAAS,CACZrB,QAAS,yBACTC,aAAcmB,EAAKL,MAAMd,aAAe,EACxCF,WAAY,YAGVqB,EAAKL,MAAMd,cAAgBmB,EAAKL,MAAMb,UACxCkB,EAAKC,SAAS,CAAEnB,SAAUkB,EAAKL,MAAMb,SAAW,8EAK7C,IAAAsB,EAAAC,KACP,OACE9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6B,EAAD,CACEzB,aAAcwB,KAAKV,MAAMd,aACzBC,SAAUuB,KAAKV,MAAMb,SACrBF,QAASyB,KAAKV,MAAMf,QACpBD,WAAY0B,KAAKV,MAAMhB,aAGzBJ,EAAAC,EAAAC,cAAC8B,EAAD,KACGF,KAAKV,MAAMC,WACTY,KAAK,WACJ,MAAO,GAAMC,KAAKC,WAEnBC,IAAI,SAACC,EAAOC,GAAR,OACHtC,EAAAC,EAAAC,cAACQ,EAAD,CACE6B,IAAKD,EACL3B,GAAI0B,EAAM1B,GACVI,KAAMsB,EAAMtB,KACZE,MAAOoB,EAAMpB,MACbJ,iBAAkBgB,EAAKhB,sBAI/Bb,EAAAC,EAAAC,cAACgB,EAAD,cAxEUsB,aCHlBC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.dd0078fa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className=\"d-flex justify-content-around align-items-center pb-2 pt-2 bg-dark\">\r\n      <h2 className=\"ml-5 text-white\">Memory Game</h2>\r\n      <h2 className={props.guessStyle}>{props.message}</h2>\r\n      <h2 className=\"text-white mr-5\">\r\n        Current Score: {props.currentScore} <br /> Top Score: {props.topScore}\r\n      </h2>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction GameBoard(props) {\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"d-flex flex-sm-wrap justify-content-center\">\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameBoard;\r\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default function GameCard(props) {\n  return (\n    <div\n      className=\"card d-flex\"\n      id={props.id}\n      onClick={() => props.handlePieceClick(props.id)}\n    >\n      <img alt={props.name} src={props.image} id={props.id} />\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function Footer() {\r\n  return <div className=\"footer mt-4\" />;\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport GameBoard from \"./components/GameBoard\";\nimport GameCard from \"./components/GameCard\";\nimport Footer from \"./components/Footer\";\nimport buildings from \"./gameImages.json\";\n\nclass App extends Component {\n  state = {\n    currentScore: 0,\n    topScore: 0,\n    message: \"Click an Image to Start\",\n    gamePieces: buildings,\n    clickedItems: [],\n    guessStyle: \"text-white\"\n  };\n\n  addClickedItem = id => {\n    this.setState(state => {\n      const clickedItems = state.clickedItems.concat(id);\n\n      return {\n        clickedItems\n      };\n    });\n  };\n\n  handlePieceClick = id => {\n    //check to see if this has been clicked before\n    if (this.state.clickedItems.includes(id)) {\n      //console.log(\"You clicked this already\");\n      // Then reset current score to 0, update message, clear out clickedItems\n      this.setState({\n        currentScore: 0,\n        message: \"You Guessed Incorrectly\",\n        clickedItems: [],\n        guessStyle: \"incorrect\"\n      });\n    } else {\n      // push the value to clickecItems array\n      this.addClickedItem(id);\n      // add 1 to the score and update the message\n      this.setState({\n        message: \"You Guessed Correctly!\",\n        currentScore: this.state.currentScore + 1,\n        guessStyle: \"correct\"\n      });\n      //check if current score > top score\n      if (this.state.currentScore >= this.state.topScore) {\n        this.setState({ topScore: this.state.topScore + 1 });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Header\n          currentScore={this.state.currentScore}\n          topScore={this.state.topScore}\n          message={this.state.message}\n          guessStyle={this.state.guessStyle}\n        />\n\n        <GameBoard>\n          {this.state.gamePieces\n            .sort(function() {\n              return 0.5 - Math.random();\n            })\n            .map((piece, i) => (\n              <GameCard\n                key={i}\n                id={piece.id}\n                name={piece.name}\n                image={piece.image}\n                handlePieceClick={this.handlePieceClick}\n              />\n            ))}\n        </GameBoard>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}